From 1ad176cf27bb551f1d4354d0f2fd513a76a223bc Mon Sep 17 00:00:00 2001
From: Emmett Tsai <emmett.tsai@gmail.com>
Date: Fri, 20 Nov 2020 00:59:05 +0800
Subject: [PATCH] Fix infinite loop

---
 mbbsd/read.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/mbbsd/read.c b/mbbsd/read.c
index 6d91eed1..257f20d5 100644
--- a/mbbsd/read.c
+++ b/mbbsd/read.c
@@ -1015,6 +1015,7 @@ i_read_key(const onekey_t * rcmdlist, keeploc_t * locmem,
 	    if(rcmdlist[ch - 1].needitem && locmem->crs_ln == 0)
 		break;
 	    if (func != NULL){
+                bool skip = false;
 		num  = locmem->crs_ln - bottom_line;
 
 		if(!rcmdlist[ch - 1].needitem)
@@ -1029,8 +1030,10 @@ i_read_key(const onekey_t * rcmdlist, keeploc_t * locmem,
                     mode = (*func)(locmem->crs_ln,
 				   &headers[locmem->crs_ln - locmem->top_ln],
 				   currdirect, locmem->crs_ln - locmem->top_ln);
-		if(mode == READ_SKIP)
+		if(mode == READ_SKIP) {
                     mode = lastmode;
+                    skip = true;
+                }
 
 		if (mode == RET_SELECTAID)
 		{
@@ -1057,6 +1060,10 @@ i_read_key(const onekey_t * rcmdlist, keeploc_t * locmem,
                         break;
 	            case RELATE_PREV:
                         new_ln = thread(locmem, RELATE_PREV);
+                        if (skip && new_ln == locmem->crs_ln) {
+                            default_ch = 0;
+                            return FULLUPDATE;
+                        }
 			break;
                     case RELATE_NEXT:
                         new_ln = thread(locmem, RELATE_NEXT);
@@ -1068,9 +1075,17 @@ i_read_key(const onekey_t * rcmdlist, keeploc_t * locmem,
 		        break;
                     case RELATE_FIRST:
                         new_ln = thread(locmem, RELATE_FIRST);
+                        if (skip && new_ln == locmem->crs_ln) {
+                            default_ch = 0;
+                            return FULLUPDATE;
+                        }
 		        break;
                     case AUTHOR_PREV:
                         new_ln = thread(locmem, AUTHOR_PREV);
+                        if (skip && new_ln == locmem->crs_ln) {
+                            default_ch = 0;
+                            return FULLUPDATE;
+                        }
 		        break;
                     case AUTHOR_NEXT:
                         new_ln = thread(locmem, AUTHOR_NEXT);
-- 
2.17.1

